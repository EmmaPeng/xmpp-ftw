<html>
    <head>
        <script type="text/javascript" src="/socket.io/socket.io.js"></script>
        <script type="text/javascript" src="/client.js"></script>
        <style>
            pre { 
                border: 1px solid #000;
                margin: 5px;
                background-color: #ddd;
            }
        </style>
    </head>
    <body>
        <h1>Welcome to XMPP over websockets using JSON</h1>
      
        <h2>JIDs</h2>
        
        <p>JIDs are always sent as an object as follows:</p>
        <pre>
        { 
            node: 'user',
            domain: 'example.com',
            resource: 'lounge'
        }
        </pre>
        
        <h2>Authentication</h2>
 
        <h3>Login</h3>
        <pre>
        // Not a real account!
        socket.emit('xmpp.login', {jid: 'test@example.com', password: 'password'});
        </pre>

        <h2>Messaging</h2>

        <h3>Send a message</h3>
        <pre>
        socket.emit('xmpp.message.chat', {to: 'other@example.com', message: 'Hello world'});
        </pre>

        <h3>Receive a chat message</h3>
        <pre>
        socket.on('xmpp.message.chat', function(data) {
            console.log('Got message from ' + data.from);
            console.log('Content was: ' + data.content);
        });
        </pre>

        <h2>Presence</h2>

        <h3>Set presence</h3>
        <pre>
        socket.emit('xmpp.presence', {show: 'online', status: 'I\'m using this script!', priority: 10});
        </pre>
        <p>Each of the parameters for presence are <i>optional</i>.</p>
        
        <h3>Receive presence</h3>
        <pre>
        socket.on('xmpp.presence', function(data) { 
            console.log(data); 
            /*
              { show: 'away', status: "I'm going away", priority: 10 }
              ...each of these are optional...
             */
        });
        </pre>
        
        <h3>Directed presence</h3>
        
        <pre>
        socket.emit('xmpp.presence.get', { to: 'user@example.com' });
        </pre>

        <h3>Go offline</h3>
        
        <pre>
        socket.emit('xmpp.presence.offline');
        </pre>
        
        <h3>Subscribe</h3>
        <p>Request to subsribe to a user</p>
        <pre>
        socket.emit('xmpp.presence.subscribe', {to: 'user@example.com' });
        </pre>
        
        <p>User requests to subscribe to your presence</p>
        <pre>
        socket.on('xmpp.presence.subscribe', function(data) {
            console.log(data);
            /* { 
                   from: 'user@example.com'
                   nick: 'Example user' // ...optional...
               } */
        });
        </pre>
        
        <p>Respond with subscribed or unsubscribed</p>
        <pre>
        socket.emit('xmpp.presence.subscribed', { to: 'user@example.com' });
        
        //   ..... or .....
        
        socket.emit('xmpp.presence.unsubscribed', { to: 'user@example.com' });
        </pre>
        
        <h2>Roster</h2>
        
        <h3>Get</h3>
        
        <pre>
        socket.emit(
            'xmpp.roster.get',
            {},
            function(roster) { console.log('roster', roster)}
        );
        
        /* Data returns as array of objects, e.g.
         * [ {
         *      jid: { node: 'user', domain: 'example.com' },
         *      subscription: 'both',
         *      name: 'Example user',
         *      group: 'Buddies'
         * } ]
        </pre>
    </body>
</html
